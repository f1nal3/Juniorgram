<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="class_data_access_1_1_p_g_query_builder" kind="class" language="C++" prot="public">
    <compoundname>DataAccess::PGQueryBuilder</compoundname>
    <basecompoundref refid="class_data_access_1_1_abstract_query_builder" prot="public" virt="non-virtual">DataAccess::AbstractQueryBuilder&lt; pqxx::result &gt;</basecompoundref>
    <includes refid="_postgre_query_8hpp" local="no">PostgreQuery.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_data_access_1_1_p_g_query_builder_1ad831b46fef88274c664d369a02d67f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataAccess::PGQueryBuilder::PGQueryBuilder</definition>
        <argsstring>(const std::string &amp;tableName, std::shared_ptr&lt; IAdapter &gt; adapter=PostgreAdapter::getInstance&lt; PostgreAdapter &gt;())</argsstring>
        <name>PGQueryBuilder</name>
        <qualifiedname>DataAccess::PGQueryBuilder::PGQueryBuilder</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>tableName</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_data_access_1_1_i_adapter" kindref="compound">IAdapter</ref> &gt;</type>
          <declname>adapter</declname>
          <defval><ref refid="class_data_access_1_1_i_adapter_1aad3b189624e653c7917361c978b98d90" kindref="member">PostgreAdapter::getInstance</ref>&lt; <ref refid="class_data_access_1_1_postgre_adapter" kindref="compound">PostgreAdapter</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess/DataAccess.Postgre/PostgreQuery.hpp" line="32" column="5" bodyfile="DataAccess/DataAccess.Postgre/PostgreQuery.hpp" bodystart="32" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1_1_p_g_query_builder_1a6b1588133e033f40e20f27f076a3c08f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataAccess::PGQueryBuilder::PGQueryBuilder</definition>
        <argsstring>(const std::string &amp;tableName, std::string_view options)</argsstring>
        <name>PGQueryBuilder</name>
        <qualifiedname>DataAccess::PGQueryBuilder::PGQueryBuilder</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>tableName</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess/DataAccess.Postgre/PostgreQuery.hpp" line="34" column="5" bodyfile="DataAccess/DataAccess.Postgre/PostgreQuery.hpp" bodystart="34" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Postgre query builder class. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_data_access_1_1_p_g_query_builder" kindref="compound">PGQueryBuilder</ref> is a database query wrapper. This class is used as an overlay of a specific database, / which is instantiated in the <ref refid="class_data_access_1_1_p_g_query_builder" kindref="compound">PGQueryBuilder</ref> constructor. The <ref refid="class_query_builder" kindref="compound">QueryBuilder</ref> is also initialized with a certain database, / certain table names (example: channels, msg) / and an adapter which contains methods for interacting with Postgre.</para>
<para>You can see some examples below for how to use it. <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/>PGQueryBuilder(</highlight><highlight class="stringliteral">&quot;tableName1&quot;</highlight><highlight class="normal">).Select()-&gt;columns({</highlight><highlight class="stringliteral">&quot;column1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;column2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal">...})-&gt;where(</highlight><highlight class="stringliteral">&quot;condition&quot;</highlight><highlight class="normal">)-&gt;...-&gt;execute()/OR/getQuery();<sp/>PGQueryBuilder(</highlight><highlight class="stringliteral">&quot;tableName2&quot;</highlight><highlight class="normal">).Insert()-&gt;field(1,</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">)-&gt;field(...)-&gt;...-&gt;returning({</highlight><highlight class="stringliteral">&quot;column1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;column2&quot;</highlight><highlight class="normal">,<sp/>...})-&gt;execute()/OR/getQuery();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>PGQueryBuilder(</highlight><highlight class="stringliteral">&quot;tableName3&quot;</highlight><highlight class="normal">).Update()-&gt;fields(pair{</highlight><highlight class="stringliteral">&quot;column1&quot;</highlight><highlight class="normal">,<sp/>1},<sp/>pair{</highlight><highlight class="stringliteral">&quot;column2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="stringliteral">&quot;strData&quot;</highlight><highlight class="normal">})-&gt;where(</highlight><highlight class="stringliteral">&quot;condition&quot;</highlight><highlight class="normal">)-&gt;...-&gt;execute()/OR/getQuery();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>PGQueryBuilder(</highlight><highlight class="stringliteral">&quot;tableName4&quot;</highlight><highlight class="normal">).Delete()-&gt;where(</highlight><highlight class="stringliteral">&quot;condition&quot;</highlight><highlight class="normal">)-&gt;...-&gt;execute()/OR/getQuery();</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>DataAccess::AbstractQueryBuilder&lt; pqxx::result &gt;</label>
        <link refid="class_data_access_1_1_abstract_query_builder"/>
      </node>
      <node id="1">
        <label>DataAccess::PGQueryBuilder</label>
        <link refid="class_data_access_1_1_p_g_query_builder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>DataAccess::AbstractQueryBuilder&lt; pqxx::result &gt;</label>
        <link refid="class_data_access_1_1_abstract_query_builder"/>
      </node>
      <node id="1">
        <label>DataAccess::PGQueryBuilder</label>
        <link refid="class_data_access_1_1_p_g_query_builder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="DataAccess/DataAccess.Postgre/PostgreQuery.hpp" line="29" column="1" bodyfile="DataAccess/DataAccess.Postgre/PostgreQuery.hpp" bodystart="30" bodyend="36"/>
    <listofallmembers>
      <member refid="class_data_access_1_1_abstract_query_builder_1a92e1ab287f9278a80a348772c25c054b" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>AbstractQueryBuilder</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1ae8ea712d708f1a6a44dfea87d9f11591" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>AbstractQueryBuilder</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a521d213652735e3ca1844c7a51736445" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>AbstractQueryBuilder</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a9f798e4583e5d63af6afcb4eb6cef1a9" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>AbstractQueryBuilder</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1aa0960fa03bc3053d544fa955c1948419" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>changeTable</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a674ce4f9a87fe93afce688d66b09b4e4" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>changeTable</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a6e306d4a601128d3c8b0617e208dbc0a" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>clearStatement</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a9d686e8f8da08744933f7559e6c3438d" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>Delete</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a8c45b6248bd0646c16621052bf5f5632" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>getAdapter</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1ac4d1178d08d3bce8cd2d62fa03592ff5" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>getCurrentTableName</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1ac12f601e567a069614822fe3a6e46c24" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>getDatabaseType</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a6fcea4209411daad1e1ae29c9ddc2594" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>Insert</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1ace49941851e7d0cda0309eb61a272d81" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>operator=</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a10997c6c7af0fa8195fde097c3b1eca8" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>operator=</name></member>
      <member refid="class_data_access_1_1_p_g_query_builder_1ad831b46fef88274c664d369a02d67f8a" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>PGQueryBuilder</name></member>
      <member refid="class_data_access_1_1_p_g_query_builder_1a6b1588133e033f40e20f27f076a3c08f" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>PGQueryBuilder</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a5d7e400becf74e9542cf618acccb4c58" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>Select</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a1ebbbdf8ad5af38da0a58e18af904095" prot="public" virt="non-virtual"><scope>DataAccess::PGQueryBuilder</scope><name>Update</name></member>
      <member refid="class_data_access_1_1_abstract_query_builder_1a8304b6404fc83465659fbdecb67dfe5f" prot="public" virt="virtual"><scope>DataAccess::PGQueryBuilder</scope><name>~AbstractQueryBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
