<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="class_arg_parser" kind="class" language="C++" prot="public">
    <compoundname>ArgParser</compoundname>
    <includes refid="_arg_parser_8hpp" local="no">ArgParser.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_arg_parser_1a9e7baefce77cbd0bd5fb44a5e2905d60" prot="private" static="no" mutable="no">
        <type>argparse::ArgumentParser</type>
        <definition>argparse::ArgumentParser ArgParser::_argParser</definition>
        <argsstring></argsstring>
        <name>_argParser</name>
        <qualifiedname>ArgParser::_argParser</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Server/Server.Core/Server.Core.Static/ArgParser.hpp" line="160" column="30" bodyfile="Server/Server.Core/Server.Core.Static/ArgParser.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_arg_parser_1a959cb44737277272f8bf3156c03d1f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArgParser::ArgParser</definition>
        <argsstring>()=delete</argsstring>
        <name>ArgParser</name>
        <qualifiedname>ArgParser::ArgParser</qualifiedname>
        <briefdescription>
<para>It&apos;s deleted default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>There is no need to use this. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Server/Server.Core/Server.Core.Static/ArgParser.hpp" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_arg_parser_1a3b6e3af8bac07f47195c6a153110d6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArgParser::ArgParser</definition>
        <argsstring>(const ArgParser &amp;)=delete</argsstring>
        <name>ArgParser</name>
        <qualifiedname>ArgParser::ArgParser</qualifiedname>
        <param>
          <type>const <ref refid="class_arg_parser" kindref="compound">ArgParser</ref> &amp;</type>
        </param>
        <briefdescription>
<para>It&apos;s deleted copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>There is no need to use this. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Server/Server.Core/Server.Core.Static/ArgParser.hpp" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_arg_parser_1a2e392c0d3a61696a4e9212691101938b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ArgParser::ArgParser</definition>
        <argsstring>(int argc, const char **argv)</argsstring>
        <name>ArgParser</name>
        <qualifiedname>ArgParser::ArgParser</qualifiedname>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Used to take parameters from main function. </para>
        </briefdescription>
        <detaileddescription>
<para>Parses arguments which were set when application was run. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>argc(amount of arguments), const char** argv(C-string arguments). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Server/Server.Core/Server.Core.Static/ArgParser.hpp" line="36" column="14" bodyfile="Server/Server.Core/Server.Core.Static/ArgParser.hpp" bodystart="36" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_arg_parser_1aeed3fd0138afa44e0269f0c00cbca11d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; std::string, std::string &gt;</type>
        <definition>std::pair&lt; std::string, std::string &gt; ArgParser::getPair</definition>
        <argsstring>(std::string const &amp;parameter) const</argsstring>
        <name>getPair</name>
        <qualifiedname>ArgParser::getPair</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Used to bind the argument and its value. </para>
        </briefdescription>
        <detaileddescription>
<para>Pairs arguments with their values. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::string</parametername>
</parameternamelist>
<parameterdescription>
<para>const parameter(argument name). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Server/Server.Core/Server.Core.Static/ArgParser.hpp" line="131" column="15" bodyfile="Server/Server.Core/Server.Core.Static/ArgParser.hpp" bodystart="131" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_arg_parser_1a521de38e1042eaf0d9f38c206710680f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_server_1_1_builder_1_1_settings" kindref="compound">Server::Builder::Settings</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Server::Builder::Settings &gt; ArgParser::getSettings</definition>
        <argsstring>() const</argsstring>
        <name>getSettings</name>
        <qualifiedname>ArgParser::getSettings</qualifiedname>
        <briefdescription>
<para>Used to generate Settings class object. </para>
        </briefdescription>
        <detaileddescription>
<para>Fills Settings class object with the current parameter values and returns it </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Server/Server.Core/Server.Core.Static/ArgParser.hpp" line="142" column="21" bodyfile="Server/Server.Core/Server.Core.Static/ArgParser.hpp" bodystart="142" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class parses arguments with which application is started. </para>
    </briefdescription>
    <detaileddescription>
<para>For example: &quot;--serverport=65001&quot;, &quot;--port=5432&quot;, &quot;--dbname=juniorgram&quot;, &quot;--hostaddr=127.0.0.1&quot;, &quot;--user=postgres&quot;, &quot;--password=postgres&quot;. Sending the port to the <ref refid="class_server" kindref="compound">Server</ref> class constructor and list of all arguments to the PostgreAdapter Instance Method. </para>
    </detaileddescription>
    <location file="Server/Server.Core/Server.Core.Static/ArgParser.hpp" line="16" column="1" bodyfile="Server/Server.Core/Server.Core.Static/ArgParser.hpp" bodystart="17" bodyend="161"/>
    <listofallmembers>
      <member refid="class_arg_parser_1a9e7baefce77cbd0bd5fb44a5e2905d60" prot="private" virt="non-virtual"><scope>ArgParser</scope><name>_argParser</name></member>
      <member refid="class_arg_parser_1a959cb44737277272f8bf3156c03d1f77" prot="public" virt="non-virtual"><scope>ArgParser</scope><name>ArgParser</name></member>
      <member refid="class_arg_parser_1a3b6e3af8bac07f47195c6a153110d6c9" prot="public" virt="non-virtual"><scope>ArgParser</scope><name>ArgParser</name></member>
      <member refid="class_arg_parser_1a2e392c0d3a61696a4e9212691101938b" prot="public" virt="non-virtual"><scope>ArgParser</scope><name>ArgParser</name></member>
      <member refid="class_arg_parser_1aeed3fd0138afa44e0269f0c00cbca11d" prot="public" virt="non-virtual"><scope>ArgParser</scope><name>getPair</name></member>
      <member refid="class_arg_parser_1a521de38e1042eaf0d9f38c206710680f" prot="public" virt="non-virtual"><scope>ArgParser</scope><name>getSettings</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
