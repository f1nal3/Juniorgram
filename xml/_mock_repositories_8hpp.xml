<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_mock_repositories_8hpp" kind="file" language="C++">
    <compoundname>MockRepositories.hpp</compoundname>
    <includes refid="_i_adapter_8hpp" local="no">DataAccess/IAdapter.hpp</includes>
    <includes refid="_i_server_repositories_8hpp" local="no">DataAccess/IServerRepositories.hpp</includes>
    <includes refid="_mock_query_8hpp" local="yes">MockQuery.hpp</includes>
    <includes refid="_primitives_8hpp" local="yes">Models/Primitives.hpp</includes>
    <includes refid="_models_8hpp" local="no">Models/Models.hpp</includes>
    <includes refid="_file_logger_8hpp" local="yes">FileLogger.hpp</includes>
    <includedby refid="_mock_repository_manager_8hpp" local="yes">DataAccess/DataAccess.Mock/MockRepositoryManager.hpp</includedby>
    <incdepgraph>
      <node id="45">
        <label>Cryptography.hpp</label>
        <link refid="_cryptography_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>FileLogger.hpp</label>
        <link refid="_file_logger_8hpp_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Logger/ILogger.hpp</label>
        <link refid="_i_logger_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Models/Models.hpp</label>
        <link refid="_models_8hpp_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Models/Primitives.hpp</label>
        <link refid="_primitives_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>UnifiedModel.hpp</label>
        <link refid="_unified_model_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>MockDatabase.hpp</label>
        <link refid="_mock_database_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>MockDatabaseOptions.hpp</label>
        <link refid="_mock_database_options_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>MockQuery.hpp</label>
        <link refid="_mock_query_8hpp_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>MockQueryBuilder.hpp</label>
        <link refid="_mock_query_builder_8hpp_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>DataAccess/DataAccess.Mock/MockRepositories.hpp</label>
        <link refid="_mock_repositories_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>MockRepositoryInstance.hpp</label>
        <link refid="_mock_repository_instance_8hpp_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>MockRepositoryStorage.hpp</label>
        <link refid="_mock_repository_storage_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>MockTables.hpp</label>
        <link refid="_mock_tables_8hpp_source"/>
      </node>
      <node id="2">
        <label>DataAccess/IAdapter.hpp</label>
        <link refid="_i_adapter_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>IMasterRepository.hpp</label>
        <link refid="_i_master_repository_8hpp_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>DataAccess/IServerRepositories.hpp</label>
        <link refid="_i_server_repositories_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Utility/JGExceptions.hpp</label>
        <link refid="_j_g_exceptions_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Utility/SafeQueue.hpp</label>
        <link refid="_safe_queue_8hpp_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Utility/Utility.hpp</label>
        <link refid="_utility_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Utility/UtilityTime.hpp</label>
        <link refid="_utility_time_8hpp_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>any</label>
      </node>
      <node id="17">
        <label>cctype</label>
      </node>
      <node id="11">
        <label>chrono</label>
      </node>
      <node id="33">
        <label>condition_variable</label>
      </node>
      <node id="46">
        <label>cryptopp/hex.h</label>
      </node>
      <node id="47">
        <label>cryptopp/modes.h</label>
      </node>
      <node id="48">
        <label>cryptopp/osrng.h</label>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="13">
        <label>cstring</label>
      </node>
      <node id="18">
        <label>ctime</label>
      </node>
      <node id="34">
        <label>deque</label>
      </node>
      <node id="21">
        <label>filesystem</label>
      </node>
      <node id="25">
        <label>fstream</label>
      </node>
      <node id="24">
        <label>iomanip</label>
      </node>
      <node id="23">
        <label>iostream</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="19">
        <label>mutex</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="36">
        <label>queue</label>
      </node>
      <node id="26">
        <label>sstream</label>
      </node>
      <node id="41">
        <label>stdexcept</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="6">
        <label>string_view</label>
      </node>
      <node id="35">
        <label>thread</label>
      </node>
      <node id="20">
        <label>type_traits</label>
      </node>
      <node id="29">
        <label>utility</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>DataAccess/DataAccess.Mock/MockRepositories.hpp</label>
        <link refid="_mock_repositories_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>DataAccess/DataAccess.Mock/MockRepositoryManager.hpp</label>
        <link refid="_mock_repository_manager_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_mock_object_1_1_mock_channels_repository" prot="public">MockObject::MockChannelsRepository</innerclass>
    <innerclass refid="struct_mock_object_1_1_mock_direct_message_repository" prot="public">MockObject::MockDirectMessageRepository</innerclass>
    <innerclass refid="struct_mock_object_1_1_mock_login_repository" prot="public">MockObject::MockLoginRepository</innerclass>
    <innerclass refid="struct_mock_object_1_1_mock_messages_repository" prot="public">MockObject::MockMessagesRepository</innerclass>
    <innerclass refid="struct_mock_object_1_1_mock_register_repository" prot="public">MockObject::MockRegisterRepository</innerclass>
    <innerclass refid="struct_mock_object_1_1_mock_replies_repository" prot="public">MockObject::MockRepliesRepository</innerclass>
    <innernamespace refid="namespace_mock_object">MockObject</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DataAccess/IAdapter.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DataAccess/IServerRepositories.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MockQuery.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Models/Primitives.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Models/Models.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FileLogger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">MockObject</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">IAdapter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="class_data_access_1_1_i_adapter" kindref="compound">DataAccess::IAdapter</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">IChannelRepository<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_data_access_1_1_i_channels_repository" kindref="compound">DataAccess::IChannelsRepository</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">IDirectMessageRepository<sp/>=<sp/><ref refid="struct_data_access_1_1_i_direct_message_repository" kindref="compound">DataAccess::IDirectMessageRepository</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ILoginRepository<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_data_access_1_1_i_login_repository" kindref="compound">DataAccess::ILoginRepository</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">IMessagesRepository<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_data_access_1_1_i_messages_repository" kindref="compound">DataAccess::IMessagesRepository</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">IRegisterRepository<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_data_access_1_1_i_register_repository" kindref="compound">DataAccess::IRegisterRepository</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">IRepliesRepository<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_data_access_1_1_i_replies_repository" kindref="compound">DataAccess::IRepliesRepository</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">LoginInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_models_1_1_login_info" kindref="compound">Models::LoginInfo</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ReplyInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_models_1_1_reply_info" kindref="compound">Models::ReplyInfo</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">MessageInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_models_1_1_message_info" kindref="compound">Models::MessageInfo</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">RegistrationInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_models_1_1_registration_info" kindref="compound">Models::RegistrationInfo</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ChannelInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_models_1_1_channel_info" kindref="compound">Models::ChannelInfo</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ChannelDeleteInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_models_1_1_channel_info" kindref="compound">Models::ChannelDeleteInfo</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ChannelLeaveInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_models_1_1_channel_info" kindref="compound">Models::ChannelLeaveInfo</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ChannelSubscriptionInfo<sp/>=<sp/><ref refid="struct_models_1_1_channel_subscription_info" kindref="compound">Models::ChannelSubscriptionInfo</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="struct_mock_object_1_1_mock_channels_repository" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_mock_object_1_1_mock_channels_repository" kindref="compound">MockChannelsRepository</ref><sp/>final<sp/>:<sp/><ref refid="struct_data_access_1_1_i_channels_repository" kindref="compound">DataAccess::IChannelsRepository</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_mock_object_1_1_mock_channels_repository" kindref="compound">MockChannelsRepository</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IAdapter&gt;&amp;<sp/>adapter)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mockQuery<sp/>=<sp/>std::make_unique&lt;MockQuery&gt;(</highlight><highlight class="stringliteral">&quot;channels&quot;</highlight><highlight class="normal">,<sp/>adapter);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mock_object_1_1_mock_channels_repository" kindref="compound">~MockChannelsRepository</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::ChannelDeleteCode<sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleteChannel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_channel_info" kindref="compound">ChannelDeleteInfo</ref>&amp;<sp/>channel)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::ChannelCreateCodes<sp/><sp/><sp/><sp/><sp/><sp/>createChannel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_channel_info" kindref="compound">ChannelInfo</ref>&amp;<sp/>channel)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::ChannelLeaveCodes<sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaveChannel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_channel_info" kindref="compound">ChannelLeaveInfo</ref>&amp;<sp/>channel)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::ChannelSubscribingCodes<sp/>subscribeToChannel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_channel_subscription_info" kindref="compound">ChannelSubscriptionInfo</ref>&amp;<sp/>channel)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::ChannelCreateCodes<sp/><sp/><sp/><sp/><sp/><sp/>newCreateChannel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_v2_1_1_channel" kindref="compound">Models::V2::Channel&lt;&gt;</ref>&amp;<sp/>channel)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getChannelSubscriptionList(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>userID)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Models::ChannelInfo&gt;<sp/>getAllChannelsList()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;MockQuery&gt;<sp/>_mockQuery;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_mock_object_1_1_mock_direct_message_repository" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_mock_object_1_1_mock_direct_message_repository" kindref="compound">MockDirectMessageRepository</ref><sp/>final<sp/>:<sp/><ref refid="struct_data_access_1_1_i_direct_message_repository" kindref="compound">IDirectMessageRepository</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_mock_object_1_1_mock_direct_message_repository" kindref="compound">MockDirectMessageRepository</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IAdapter&gt;&amp;<sp/>adapter)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mockQuery<sp/>=<sp/>std::make_unique&lt;MockQuery&gt;(</highlight><highlight class="stringliteral">&quot;direct_msgs&quot;</highlight><highlight class="normal">,<sp/>adapter);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mock_object_1_1_mock_direct_message_repository" kindref="compound">~MockDirectMessageRepository</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::DirectMessageStatus<sp/>addDirectChat(uint64_t<sp/>userID,<sp/>uint64_t<sp/>receiverID)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;MockQuery&gt;<sp/>_mockQuery;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="struct_mock_object_1_1_mock_login_repository" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_mock_object_1_1_mock_login_repository" kindref="compound">MockLoginRepository</ref><sp/>final<sp/>:<sp/><ref refid="struct_data_access_1_1_i_login_repository" kindref="compound">ILoginRepository</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_mock_object_1_1_mock_login_repository" kindref="compound">MockLoginRepository</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IAdapter&gt;&amp;<sp/>adapter)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mockQuery<sp/>=<sp/>std::make_unique&lt;MockQuery&gt;(</highlight><highlight class="stringliteral">&quot;user_login&quot;</highlight><highlight class="normal">,<sp/>adapter);<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mock_object_1_1_mock_login_repository" kindref="compound">~MockLoginRepository</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint64_t<sp/>loginUser(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_login_info" kindref="compound">LoginInfo</ref>&amp;<sp/>loginInfo)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;MockQuery&gt;<sp/>_mockQuery;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="struct_mock_object_1_1_mock_messages_repository" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_mock_object_1_1_mock_messages_repository" kindref="compound">MockMessagesRepository</ref><sp/>final<sp/>:<sp/><ref refid="struct_data_access_1_1_i_messages_repository" kindref="compound">IMessagesRepository</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_mock_object_1_1_mock_messages_repository" kindref="compound">MockMessagesRepository</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IAdapter&gt;&amp;<sp/>adapter)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mockQuery<sp/>=<sp/>std::make_unique&lt;MockQuery&gt;(</highlight><highlight class="stringliteral">&quot;msgs&quot;</highlight><highlight class="normal">,<sp/>adapter);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mock_object_1_1_mock_messages_repository" kindref="compound">~MockMessagesRepository</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::DeletingMessageCodes<sp/><sp/><sp/><sp/>deleteMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_message_info" kindref="compound">MessageInfo</ref>&amp;<sp/>messageInfo)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::ReactionMessageCodes<sp/><sp/><sp/><sp/>updateMessageReactions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_message_info" kindref="compound">MessageInfo</ref>&amp;<sp/>messageInfo)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::EditingMessageCodes<sp/><sp/><sp/><sp/><sp/>editMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_message_info" kindref="compound">MessageInfo</ref>&amp;<sp/>messageInfo)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::StoringMessageCodes<sp/><sp/><sp/><sp/><sp/>storeMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_message_info" kindref="compound">MessageInfo</ref>&amp;<sp/>messageInfo)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Models::MessageInfo&gt;<sp/>getMessageHistory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>channelID)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;MockQuery&gt;<sp/>_mockQuery;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="struct_mock_object_1_1_mock_register_repository" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_mock_object_1_1_mock_register_repository" kindref="compound">MockRegisterRepository</ref><sp/>final<sp/>:<sp/><ref refid="struct_data_access_1_1_i_register_repository" kindref="compound">IRegisterRepository</ref></highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_mock_object_1_1_mock_register_repository" kindref="compound">MockRegisterRepository</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IAdapter&gt;&amp;<sp/>adapter)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mockQuery<sp/>=<sp/>std::make_unique&lt;MockQuery&gt;(</highlight><highlight class="stringliteral">&quot;user_registration&quot;</highlight><highlight class="normal">,<sp/>adapter);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mock_object_1_1_mock_register_repository" kindref="compound">~MockRegisterRepository</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::RegistrationCodes<sp/>registerUser(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_registration_info" kindref="compound">RegistrationInfo</ref>&amp;<sp/>regInfo)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;MockQuery&gt;<sp/>_mockQuery;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="struct_mock_object_1_1_mock_replies_repository" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_mock_object_1_1_mock_replies_repository" kindref="compound">MockRepliesRepository</ref><sp/>final<sp/>:<sp/><ref refid="struct_data_access_1_1_i_replies_repository" kindref="compound">IRepliesRepository</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_mock_object_1_1_mock_replies_repository" kindref="compound">MockRepliesRepository</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IAdapter&gt;&amp;<sp/>adapter)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mockQuery<sp/>=<sp/>std::make_unique&lt;MockQuery&gt;(</highlight><highlight class="stringliteral">&quot;replies&quot;</highlight><highlight class="normal">,<sp/>adapter);<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mock_object_1_1_mock_replies_repository" kindref="compound">~MockRepliesRepository</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Models::ReplyInfo&gt;<sp/>getReplyHistory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>channelID)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>Utility::StoringReplyCodes<sp/><sp/><sp/><sp/><sp/>storeReply(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_reply_info" kindref="compound">ReplyInfo</ref>&amp;<sp/>replyInfo)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;MockQuery&gt;<sp/>_mockQuery;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="DataAccess/DataAccess.Mock/MockRepositories.hpp"/>
  </compounddef>
</doxygen>
