<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_utility_8hpp" kind="file" language="C++">
    <compoundname>Utility.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">string</includes>
    <includes local="no">cctype</includes>
    <includes local="no">ctime</includes>
    <includes local="no">mutex</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">filesystem</includes>
    <includedby refid="_primitives_8hpp" local="no">Base/Models/Public/Include/Models/Primitives.hpp</includedby>
    <includedby refid="_i_repository_8hpp" local="no">DataAccess/Public/Include/DataAccess/IRepository.hpp</includedby>
    <includedby refid="_i_server_repositories_8hpp" local="no">DataAccess/Public/Include/DataAccess/IServerRepositories.hpp</includedby>
    <includedby refid="_connection_8hpp" local="yes">Network/Public/Include/Network/Connection.hpp</includedby>
    <includedby refid="_message_8hpp" local="no">Network/Public/Include/Network/Message.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>Utility/Utility.Public/Include/Utility/Utility.hpp</label>
        <link refid="_utility_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="4">
        <label>cctype</label>
      </node>
      <node id="5">
        <label>ctime</label>
      </node>
      <node id="8">
        <label>filesystem</label>
      </node>
      <node id="6">
        <label>mutex</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>Base/Models/Public/Include/Models/Primitives.hpp</label>
        <link refid="_primitives_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Client/Client.CLI/App.hpp</label>
        <link refid="_app_8hpp_source"/>
      </node>
      <node id="3">
        <label>Client/Client.Core/Client.Core.Static/Client.hpp</label>
        <link refid="_client_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>DataAccess/DataAccess.Debug/FileRepository.hpp</label>
        <link refid="_file_repository_8hpp_source"/>
      </node>
      <node id="9">
        <label>DataAccess/DataAccess.Mock/MockDatabase.hpp</label>
        <link refid="_mock_database_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>DataAccess/DataAccess.Mock/MockQuery.hpp</label>
        <link refid="_mock_query_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>DataAccess/DataAccess.Mock/MockQueryBuilder.hpp</label>
        <link refid="_mock_query_builder_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>DataAccess/DataAccess.Mock/MockRepositories.hpp</label>
        <link refid="_mock_repositories_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>DataAccess/DataAccess.Mock/MockRepositoryInstance.hpp</label>
        <link refid="_mock_repository_instance_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>DataAccess/DataAccess.Mock/MockRepositoryManager.hpp</label>
        <link refid="_mock_repository_manager_8hpp_source"/>
      </node>
      <node id="7">
        <label>DataAccess/DataAccess.Mock/MockRepositoryStorage.hpp</label>
        <link refid="_mock_repository_storage_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>DataAccess/DataAccess.Postgre/PostgreRepositories.hpp</label>
        <link refid="_postgre_repositories_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>DataAccess/DataAccess.Postgre/PostgreRepositoryManager.hpp</label>
        <link refid="_postgre_repository_manager_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>DataAccess/DataAccess.Postgre/UsersAmountFinder.hpp</label>
        <link refid="_users_amount_finder_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>DataAccess/Public/Include/DataAccess/IRepository.hpp</label>
        <link refid="_i_repository_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>DataAccess/Public/Include/DataAccess/IServerRepositories.hpp</label>
        <link refid="_i_server_repositories_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Network/Public/Include/Network/CombiningHandlers.hpp</label>
        <link refid="_combining_handlers_8hpp_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Network/Public/Include/Network/CompressionHandler.hpp</label>
        <link refid="_compression_handler_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Network/Public/Include/Network/Connection.hpp</label>
        <link refid="_connection_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Network/Public/Include/Network/EncryptionHandler.hpp</label>
        <link refid="_encryption_handler_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Network/Public/Include/Network/Handler.hpp</label>
        <link refid="_handler_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Network/Public/Include/Network/Message.hpp</label>
        <link refid="_message_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Network/Public/Include/Network/SerializationHandler.hpp</label>
        <link refid="_serialization_handler_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Network/Public/Include/Network/YasSerializer.hpp</label>
        <link refid="_yas_serializer_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Network/Public/Include/Network/iAPI.hpp</label>
        <link refid="i_a_p_i_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Server/Server.Core/Server.Core.Static/Server.hpp</label>
        <link refid="_server_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Server/Server.Core/Server.Core.Static/ServerBuilder.hpp</label>
        <link refid="_server_builder_8hpp_source"/>
      </node>
      <node id="1">
        <label>Utility/Utility.Public/Include/Utility/Utility.hpp</label>
        <link refid="_utility_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_utility">Utility</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cctype&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Utility</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>RegistrationCodes<sp/>:<sp/>std::uint8_t</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>EMAIL_ALREADY_EXISTS,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>LOGIN_ALREADY_EXISTS,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>SUCCESS</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>GeneralCodes<sp/>:<sp/>std::uint8_t</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>SUCCESS,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>FAILED</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using<sp/><sp/></highlight><highlight class="normal">StoringMessageCodes<sp/>=<sp/>GeneralCodes;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">StoringReplyCodes<sp/>=<sp/>GeneralCodes;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">DeletingMessageCodes<sp/><sp/>=<sp/>GeneralCodes;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">EditingMessageCodes<sp/><sp/>=<sp/>GeneralCodes;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>ChannelSubscribingCodes<sp/>:<sp/>std::uint8_t</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>CHANNEL_HAS_ALREADY_BEEN_SIGNED,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>SUCCESS,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>FAILED</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>ChannelLeaveCodes<sp/>:<sp/>std::uint8_t</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>CHANNEL_NOT_FOUND,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>SUCCESS,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>FAILED</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>ChannelDeleteCode<sp/>:<sp/>std::uint8_t</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>CHANNEL_NOT_FOUND,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>CHANNEL_IS_NOT_USER,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>SUCCESS,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>FAILED</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>ChannelCreateCodes<sp/>:<sp/>std::uint8_t</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>CHANNEL_ALREADY_CREATED,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>SUCCESS,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>FAILED</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">using<sp/><sp/></highlight><highlight class="normal">DirectMessageStatus<sp/><sp/>=<sp/>GeneralCodes;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ReactionMessageCodes<sp/><sp/>=<sp/>GeneralCodes;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>removeSpaces(std::string_view<sp/>input)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>isSpace<sp/>=<sp/>[](</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::isspace(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c));<sp/>};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>result.reserve(input.size());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sequenceStart<sp/>=<sp/>std::find_if_not(input.cbegin(),<sp/>input.cend(),<sp/>isSpace);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sequenceEnd<sp/><sp/><sp/>=<sp/>sequenceStart;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sequenceStart<sp/>&lt;<sp/>input.end())</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spaceSequence<sp/>=<sp/>isSpace(*sequenceStart))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>singleSpace<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>(sequenceEnd<sp/>&lt;<sp/>input.end())<sp/>&amp;&amp;<sp/>isSpace(*sequenceEnd);<sp/>++sequenceEnd)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sequenceEnd<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>singleSpace<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(singleSpace);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequenceEnd<sp/>=<sp/>std::find_if(sequenceStart,<sp/>input.cend(),<sp/>isSpace);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(sequenceStart,<sp/>sequenceEnd);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequenceStart<sp/>=<sp/>sequenceEnd;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.empty()<sp/>&amp;&amp;<sp/>isSpace(result.back()))</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.pop_back();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>getFldPath(std::string_view<sp/>folderPath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Log&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::filesystem::path<sp/>_path<sp/>=<sp/>folderPath;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>std::filesystem::exists(_path))</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::filesystem::create_directory(_path);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::filesystem::absolute(_path).string();</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Utility</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Utility/Utility.Public/Include/Utility/Utility.hpp"/>
  </compounddef>
</doxygen>
