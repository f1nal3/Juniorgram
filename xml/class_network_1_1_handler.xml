<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="class_network_1_1_handler" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Network::Handler</compoundname>
    <derivedcompoundref refid="class_network_1_1_abstract_handler" prot="public" virt="non-virtual">Network::AbstractHandler</derivedcompoundref>
    <includes refid="_handler_8hpp" local="no">Handler.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_network_1_1_handler_1a5b0d27b200dca44a4fa12e76ad125e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Network::Handler::Handler</definition>
        <argsstring>()=default</argsstring>
        <name>Handler</name>
        <qualifiedname>Network::Handler::Handler</qualifiedname>
        <briefdescription>
<para>Default <ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Network/Public/Include/Network/Handler.hpp" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_network_1_1_handler_1ae20002aef29f325c5102c9fa6f5b3a62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Network::Handler::Handler</definition>
        <argsstring>(const Handler &amp;)=delete</argsstring>
        <name>Handler</name>
        <qualifiedname>Network::Handler::Handler</qualifiedname>
        <param>
          <type>const <ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Delete <ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Network/Public/Include/Network/Handler.hpp" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_network_1_1_handler_1a14da12cf73099bce1bb5b09b57fae1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Network::Handler::Handler</definition>
        <argsstring>(Handler &amp;&amp;)=delete</argsstring>
        <name>Handler</name>
        <qualifiedname>Network::Handler::Handler</qualifiedname>
        <param>
          <type><ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Delete <ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> move constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Network/Public/Include/Network/Handler.hpp" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_network_1_1_handler_1a89e439ca63d065b8d070a74848893f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> &amp;</type>
        <definition>Handler &amp; Network::Handler::operator=</definition>
        <argsstring>(const Handler &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>Network::Handler::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Delete <ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> copy assignment constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Network/Public/Include/Network/Handler.hpp" line="34" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_network_1_1_handler_1aa2da68b7aeb4c5ba8b1c49024fd3c3fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> &amp;</type>
        <definition>Handler &amp; Network::Handler::operator=</definition>
        <argsstring>(Handler &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>Network::Handler::operator=</qualifiedname>
        <param>
          <type><ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Delete <ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> move assignment constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Network/Public/Include/Network/Handler.hpp" line="36" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_network_1_1_handler_1acedc859af138f19e1d8e9315cc233aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Network::Handler::~Handler</definition>
        <argsstring>()=default</argsstring>
        <name>~Handler</name>
        <qualifiedname>Network::Handler::~Handler</qualifiedname>
        <briefdescription>
<para>Virtual <ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Network/Public/Include/Network/Handler.hpp" line="38" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_network_1_1_handler_1a95d3091be58e0eaec6c6b2767b2de749" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Network::Handler::setNext</definition>
        <argsstring>(Handler *handler)=0</argsstring>
        <name>setNext</name>
        <qualifiedname>Network::Handler::setNext</qualifiedname>
        <reimplementedby refid="class_network_1_1_abstract_handler_1ac08e0b26b9b6d954578ebedd433401e3">setNext</reimplementedby>
        <param>
          <type><ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Virtual <ref refid="class_network_1_1_handler" kindref="compound">Handler</ref> method for preprocessing next handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Network/Public/Include/Network/Handler.hpp" line="41" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_network_1_1_handler_1a52afad677d3cda18be5d424475b89cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>MessageProcessingState</type>
        <definition>virtual MessageProcessingState Network::Handler::handleOutcomingMessage</definition>
        <argsstring>(const Message &amp;source, yas::shared_buffer &amp;destination)=0</argsstring>
        <name>handleOutcomingMessage</name>
        <qualifiedname>Network::Handler::handleOutcomingMessage</qualifiedname>
        <reimplementedby refid="class_network_1_1_compression_handler_1a29cba1eca737e1a16c926c86cca55617">handleOutcomingMessage</reimplementedby>
        <reimplementedby refid="class_network_1_1_encryption_handler_1aa43ae93da073167184ad747034b168f7">handleOutcomingMessage</reimplementedby>
        <reimplementedby refid="class_network_1_1_serialization_handler_1ade45ce4419fd156d7f4128cab751ed24">handleOutcomingMessage</reimplementedby>
        <param>
          <type>const <ref refid="struct_network_1_1_message" kindref="compound">Message</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>yas::shared_buffer &amp;</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
<para>Virtual method for preprocessing of outcoming messages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>- variable that contains data that should be preprocessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>- buffer that will contain preprocessed message body. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Network/Public/Include/Network/Handler.hpp" line="48" column="36"/>
      </memberdef>
      <memberdef kind="function" id="class_network_1_1_handler_1a3347420b2fb463aae3aadad8b1bfcc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>MessageProcessingState</type>
        <definition>virtual MessageProcessingState Network::Handler::handleIncomingMessageBody</definition>
        <argsstring>(const yas::shared_buffer &amp;source, Message &amp;destination)=0</argsstring>
        <name>handleIncomingMessageBody</name>
        <qualifiedname>Network::Handler::handleIncomingMessageBody</qualifiedname>
        <reimplementedby refid="class_network_1_1_compression_handler_1a3910e3f038d8eb168ebe775c6a19520b">handleIncomingMessageBody</reimplementedby>
        <reimplementedby refid="class_network_1_1_encryption_handler_1a71a57f955f7ab15b1921b9806f702250">handleIncomingMessageBody</reimplementedby>
        <reimplementedby refid="class_network_1_1_serialization_handler_1a3258518735a9c86da2bf9332d874c469">handleIncomingMessageBody</reimplementedby>
        <param>
          <type>const yas::shared_buffer &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="struct_network_1_1_message" kindref="compound">Message</ref> &amp;</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
<para>Virtual method for preprocessing of incoming message bodies. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>- buffer that contains data that should be preprocessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>- variable that will contain preprocessed message body. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Network/Public/Include/Network/Handler.hpp" line="55" column="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>interface for handler class for message preprocessing. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Network::AbstractHandler</label>
        <link refid="class_network_1_1_abstract_handler"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Network::CompressionHandler</label>
        <link refid="class_network_1_1_compression_handler"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Network::EncryptionHandler</label>
        <link refid="class_network_1_1_encryption_handler"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Network::Handler</label>
        <link refid="class_network_1_1_handler"/>
      </node>
      <node id="5">
        <label>Network::SerializationHandler</label>
        <link refid="class_network_1_1_serialization_handler"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="Network/Public/Include/Network/Handler.hpp" line="24" column="1" bodyfile="Network/Public/Include/Network/Handler.hpp" bodystart="25" bodyend="56"/>
    <listofallmembers>
      <member refid="class_network_1_1_handler_1a3347420b2fb463aae3aadad8b1bfcc31" prot="public" virt="pure-virtual"><scope>Network::Handler</scope><name>handleIncomingMessageBody</name></member>
      <member refid="class_network_1_1_handler_1a52afad677d3cda18be5d424475b89cb2" prot="public" virt="pure-virtual"><scope>Network::Handler</scope><name>handleOutcomingMessage</name></member>
      <member refid="class_network_1_1_handler_1a5b0d27b200dca44a4fa12e76ad125e06" prot="public" virt="non-virtual"><scope>Network::Handler</scope><name>Handler</name></member>
      <member refid="class_network_1_1_handler_1ae20002aef29f325c5102c9fa6f5b3a62" prot="public" virt="non-virtual"><scope>Network::Handler</scope><name>Handler</name></member>
      <member refid="class_network_1_1_handler_1a14da12cf73099bce1bb5b09b57fae1a4" prot="public" virt="non-virtual"><scope>Network::Handler</scope><name>Handler</name></member>
      <member refid="class_network_1_1_handler_1a89e439ca63d065b8d070a74848893f3a" prot="public" virt="non-virtual"><scope>Network::Handler</scope><name>operator=</name></member>
      <member refid="class_network_1_1_handler_1aa2da68b7aeb4c5ba8b1c49024fd3c3fa" prot="public" virt="non-virtual"><scope>Network::Handler</scope><name>operator=</name></member>
      <member refid="class_network_1_1_handler_1a95d3091be58e0eaec6c6b2767b2de749" prot="public" virt="pure-virtual"><scope>Network::Handler</scope><name>setNext</name></member>
      <member refid="class_network_1_1_handler_1acedc859af138f19e1d8e9315cc233aaf" prot="public" virt="virtual"><scope>Network::Handler</scope><name>~Handler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
