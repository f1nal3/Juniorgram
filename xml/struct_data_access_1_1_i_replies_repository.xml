<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="struct_data_access_1_1_i_replies_repository" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>DataAccess::IRepliesRepository</compoundname>
    <basecompoundref refid="struct_data_access_1_1_i_master_repository" prot="public" virt="non-virtual">DataAccess::IMasterRepository</basecompoundref>
    <derivedcompoundref refid="struct_data_access_1_1_replies_repository" prot="public" virt="non-virtual">DataAccess::RepliesRepository</derivedcompoundref>
    <derivedcompoundref refid="struct_mock_object_1_1_mock_replies_repository" prot="public" virt="non-virtual">MockObject::MockRepliesRepository</derivedcompoundref>
    <includes refid="_i_server_repositories_8hpp" local="no">IServerRepositories.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_data_access_1_1_i_replies_repository_1ac08449b6412c2f984b0deefc46b92c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="struct_models_1_1_reply_info" kindref="compound">Models::ReplyInfo</ref> &gt;</type>
        <definition>virtual std::vector&lt; Models::ReplyInfo &gt; DataAccess::IRepliesRepository::getReplyHistory</definition>
        <argsstring>(const std::uint64_t channelID)=0</argsstring>
        <name>getReplyHistory</name>
        <qualifiedname>DataAccess::IRepliesRepository::getReplyHistory</qualifiedname>
        <reimplementedby refid="struct_data_access_1_1_replies_repository_1a1d660e6bdab961836e279b76c933121d">getReplyHistory</reimplementedby>
        <param>
          <type>const std::uint64_t</type>
          <declname>channelID</declname>
        </param>
        <briefdescription>
<para>virtual method for getting history. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess/Public/Include/DataAccess/IServerRepositories.hpp" line="85" column="25"/>
      </memberdef>
      <memberdef kind="function" id="struct_data_access_1_1_i_replies_repository_1aed5833f5d6fdb99f5d338e8b4a126d4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Utility::StoringReplyCodes</type>
        <definition>virtual Utility::StoringReplyCodes DataAccess::IRepliesRepository::storeReply</definition>
        <argsstring>(const Models::ReplyInfo &amp;replyInfo)=0</argsstring>
        <name>storeReply</name>
        <qualifiedname>DataAccess::IRepliesRepository::storeReply</qualifiedname>
        <reimplementedby refid="struct_data_access_1_1_replies_repository_1a838601d435e7a33db8f10a9cfa246994">storeReply</reimplementedby>
        <reimplementedby refid="struct_mock_object_1_1_mock_replies_repository_1a40bf0b4225bade55fad58421648f6e85">storeReply</reimplementedby>
        <param>
          <type>const <ref refid="struct_models_1_1_reply_info" kindref="compound">Models::ReplyInfo</ref> &amp;</type>
          <declname>replyInfo</declname>
        </param>
        <briefdescription>
<para>Virtual method for store reply. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>replyInfo.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The return value of the method is one of the StoringMessageCodes (enum): <linebreak/>
Storing successful - StoringMessageCodes::SUCCESS. <linebreak/>
Storing failed - StoringMessageCodes::FAILED. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess/Public/Include/DataAccess/IServerRepositories.hpp" line="94" column="40"/>
      </memberdef>
      <memberdef kind="function" id="struct_data_access_1_1_i_replies_repository_1a22ac80294a2857cef2ffcfbb620ff8c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual DataAccess::IRepliesRepository::~IRepliesRepository</definition>
        <argsstring>()=default</argsstring>
        <name>~IRepliesRepository</name>
        <qualifiedname>DataAccess::IRepliesRepository::~IRepliesRepository</qualifiedname>
        <briefdescription>
<para>virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess/Public/Include/DataAccess/IServerRepositories.hpp" line="99" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements replies processing. </para>
    </briefdescription>
    <detaileddescription>
<para>The class is similar to <ref refid="struct_data_access_1_1_i_messages_repository" kindref="compound">IMessagesRepository</ref>, but processing object is replies on messages (object of ReplyInfo class). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>DataAccess::IMasterRepository</label>
        <link refid="struct_data_access_1_1_i_master_repository"/>
      </node>
      <node id="1">
        <label>DataAccess::IRepliesRepository</label>
        <link refid="struct_data_access_1_1_i_replies_repository"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>DataAccess::RepliesRepository</label>
        <link refid="struct_data_access_1_1_replies_repository"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>MockObject::MockRepliesRepository</label>
        <link refid="struct_mock_object_1_1_mock_replies_repository"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>DataAccess::IMasterRepository</label>
        <link refid="struct_data_access_1_1_i_master_repository"/>
      </node>
      <node id="1">
        <label>DataAccess::IRepliesRepository</label>
        <link refid="struct_data_access_1_1_i_replies_repository"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="DataAccess/Public/Include/DataAccess/IServerRepositories.hpp" line="80" column="1" bodyfile="DataAccess/Public/Include/DataAccess/IServerRepositories.hpp" bodystart="81" bodyend="100"/>
    <listofallmembers>
      <member refid="struct_data_access_1_1_i_replies_repository_1ac08449b6412c2f984b0deefc46b92c81" prot="public" virt="pure-virtual"><scope>DataAccess::IRepliesRepository</scope><name>getReplyHistory</name></member>
      <member refid="struct_data_access_1_1_i_replies_repository_1aed5833f5d6fdb99f5d338e8b4a126d4e" prot="public" virt="pure-virtual"><scope>DataAccess::IRepliesRepository</scope><name>storeReply</name></member>
      <member refid="struct_data_access_1_1_i_master_repository_1a7f04b7df7482816d4de0c504f432fb5f" prot="public" virt="virtual"><scope>DataAccess::IRepliesRepository</scope><name>~IMasterRepository</name></member>
      <member refid="struct_data_access_1_1_i_replies_repository_1a22ac80294a2857cef2ffcfbb620ff8c2" prot="public" virt="virtual"><scope>DataAccess::IRepliesRepository</scope><name>~IRepliesRepository</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
