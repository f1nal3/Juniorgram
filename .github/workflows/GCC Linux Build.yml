name: GCC Linux Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BUILD_TYPE: [Debug, Release]
  
    services:
      postgres:
        image: ghcr.io/f1nal3/juniorgram/juniorgram_test_db:stable
        env:
           POSTGRES_USER: postgres
           POSTGRES_PASSWORD: postgres
           POSTGRES_DB: test

        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Login to GitHub Packages Docker Registry.
      uses: docker/login-action@v1
      with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_ACCESS }}
        
    - name: Pull docker image
      run: docker pull docker.pkg.github.com/f1nal3/juniorgram/juniorgram_test_db:stable
      
    - name: Run docker image
      run: docker run -d --name juniorgram_test_db_container -p 5432:5432 docker.pkg.github.com/f1nal3/juniorgram/juniorgram_test_db:stable
    
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'
        
    - name: Get prerequisites
      run: python -m pip install conan==1.36.0 cmake
      
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        host: 'linux'
        target: 'desktop'
        dir: '${{ github.workspace }}'
        install-deps: 'true'
        setup-python: 'false'
        set-env: 'true'
        tools-only: 'false'

    - name: Cache Conan packages
      id: conan-cache
      uses: actions/cache@v2
      with:
        path: '/home/runner/.conan/'
        key: ${{ runner.os }}${{matrix.BUILD_TYPE}}-conan
        restore-keys: ${{ runner.os }}${{matrix.BUILD_TYPE}}-conan
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.BUILD_TYPE}} --output-on-failure
   
    - name: Archive server executable
      if: matrix.BUILD_TYPE == 'Release'
      uses: actions/upload-artifact@v2
      with:
        name: juniorgram-server
        path: ./build/bin/Server.Exec
