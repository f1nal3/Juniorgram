name: Windows Build

on:
  push:
    branches: [ dev, master ]
  pull_request:
    branches: [ dev, master ]

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        BUILD_TYPE: [Debug]
    
    steps:
    - name : Checkout
      uses: actions/checkout@v2
    
    - name: Python setup
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'
        
    - name: Get prerequisites
      run: python -m pip install cmake conan==1.52

    - name: Cache Conan packages
      id: conan-cache
      uses: actions/cache@v3
      with:
        path: |
          'C:\Users\runneradmin\.conan\*'
          'C:\.conan\*'
        key: ${{matrix.BUILD_TYPE}}${{ runner.os }}-conan
        restore-keys: ${{matrix.BUILD_TYPE}}${{ runner.os }}-conan

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.BUILD_TYPE}}

    - name: Database Setup
      run: |
        $pgService = Get-Service -Name postgresql*
        Set-Service -InputObject $pgService -Status running -StartupType automatic
        Start-Process -FilePath "$env:PGBIN\pg_isready" -Wait -PassThru
    
    - name: Create Test Database
      run: |
        & $env:PGBIN\createdb --owner=postgres testdb
        & $env:PGBIN\psql --username=postgres --host=localhost -d testdb -f ./Utility/SQL/Database_Scheme.sql
        & $env:PGBIN\psql --username=postgres --host=localhost --list testdb

    - name: Test
      working-directory: ${{github.workspace}}/build

      run: ctest -C ${{matrix.BUILD_TYPE}} --output-on-failure
